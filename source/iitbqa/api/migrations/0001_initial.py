# -*- coding: utf-8 -*-
# Generated by Django 1.11.25 on 2019-11-26 13:52
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=100)),
                ('userdepartment', models.CharField(choices=[(b'AE', b'Aerospace Engineering'), (b'BSBE', b'Biosciences and Bioengineering'), (b'CHE', b'Chemical Engineering'), (b'CHM', b'Chemistry'), (b'CE', b'Civil Engineering'), (b'CSE', b'Computer Science & Engineering'), (b'ES', b'Earth Sciences'), (b'EE', b'Electrical Engineering'), (b'ESE', b'Energy Science and Engineering'), (b'CESE', b'Environmental Science and Engineering (CESE)'), (b'HSS', b'Humanities & Social Sciences'), (b'IDC', b'IDC School of Design'), (b'MTH', b'Mathematics'), (b'ME', b'Mechanical Engineering'), (b'MEMS', b'Metallurgical Engineering & Materials Science'), (b'PHY', b'Physics')], default=b'CSE', max_length=4)),
                ('userbio', models.CharField(blank=True, max_length=1000)),
                ('userdegree', models.CharField(choices=[(b'BTECH', b'Bachelors of Technology'), (b'DUAL', b'Dual Degree'), (b'BS', b'Bachelors of Sciences'), (b'BDES', b'Bachelors of Design'), (b'MTECH', b'Masters of Technology'), (b'MTECH-PHD', b'Masters of Technology with PhD'), (b'MDES', b'Masters of Design'), (b'MPHIL', b'Masters of Philosophy'), (b'MMGT', b'Masters of Management'), (b'EMBA', b'Masters of Business Administration'), (b'MSC', b'Masters of Sciences'), (b'MSC-PHD', b'Masters of Sciences with PhD'), (b'PHD', b'Doctors of Philosophy'), (b'NA', b'Not Applicable')], default=b'NA', max_length=9)),
                ('userspecialization', models.CharField(blank=True, max_length=100)),
                ('content', models.CharField(max_length=10000)),
                ('votes', models.IntegerField(default=0)),
                ('timestamp', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(default=1)),
                ('timestamp', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=100)),
                ('userdepartment', models.CharField(choices=[(b'AE', b'Aerospace Engineering'), (b'BSBE', b'Biosciences and Bioengineering'), (b'CHE', b'Chemical Engineering'), (b'CHM', b'Chemistry'), (b'CE', b'Civil Engineering'), (b'CSE', b'Computer Science & Engineering'), (b'ES', b'Earth Sciences'), (b'EE', b'Electrical Engineering'), (b'ESE', b'Energy Science and Engineering'), (b'CESE', b'Environmental Science and Engineering (CESE)'), (b'HSS', b'Humanities & Social Sciences'), (b'IDC', b'IDC School of Design'), (b'MTH', b'Mathematics'), (b'ME', b'Mechanical Engineering'), (b'MEMS', b'Metallurgical Engineering & Materials Science'), (b'PHY', b'Physics')], default=b'CSE', max_length=4)),
                ('userbio', models.CharField(blank=True, max_length=1000)),
                ('userdegree', models.CharField(choices=[(b'BTECH', b'Bachelors of Technology'), (b'DUAL', b'Dual Degree'), (b'BS', b'Bachelors of Sciences'), (b'BDES', b'Bachelors of Design'), (b'MTECH', b'Masters of Technology'), (b'MTECH-PHD', b'Masters of Technology with PhD'), (b'MDES', b'Masters of Design'), (b'MPHIL', b'Masters of Philosophy'), (b'MMGT', b'Masters of Management'), (b'EMBA', b'Masters of Business Administration'), (b'MSC', b'Masters of Sciences'), (b'MSC-PHD', b'Masters of Sciences with PhD'), (b'PHD', b'Doctors of Philosophy'), (b'NA', b'Not Applicable')], default=b'NA', max_length=9)),
                ('userspecialization', models.CharField(blank=True, max_length=100)),
                ('question', models.CharField(max_length=500, unique=True)),
                ('description', models.CharField(max_length=5000)),
                ('numAnswers', models.IntegerField(default=0)),
                ('timestamp', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('ldapid', models.CharField(max_length=100, unique=True)),
                ('gender', models.CharField(choices=[(b'M', b'Male'), (b'F', b'Female')], default=b'M', max_length=1)),
                ('department', models.CharField(choices=[(b'AE', b'Aerospace Engineering'), (b'BSBE', b'Biosciences and Bioengineering'), (b'CHE', b'Chemical Engineering'), (b'CHM', b'Chemistry'), (b'CE', b'Civil Engineering'), (b'CSE', b'Computer Science & Engineering'), (b'ES', b'Earth Sciences'), (b'EE', b'Electrical Engineering'), (b'ESE', b'Energy Science and Engineering'), (b'CESE', b'Environmental Science and Engineering (CESE)'), (b'HSS', b'Humanities & Social Sciences'), (b'IDC', b'IDC School of Design'), (b'MTH', b'Mathematics'), (b'ME', b'Mechanical Engineering'), (b'MEMS', b'Metallurgical Engineering & Materials Science'), (b'PHY', b'Physics')], default=b'CSE', max_length=4)),
                ('bio', models.CharField(max_length=1000)),
                ('student_professor', models.BooleanField(default=True)),
                ('degree', models.CharField(choices=[(b'BTECH', b'Bachelors of Technology'), (b'DUAL', b'Dual Degree'), (b'BS', b'Bachelors of Sciences'), (b'BDES', b'Bachelors of Design'), (b'MTECH', b'Masters of Technology'), (b'MTECH-PHD', b'Masters of Technology with PhD'), (b'MDES', b'Masters of Design'), (b'MPHIL', b'Masters of Philosophy'), (b'MMGT', b'Masters of Management'), (b'EMBA', b'Masters of Business Administration'), (b'MSC', b'Masters of Sciences'), (b'MSC-PHD', b'Masters of Sciences with PhD'), (b'PHD', b'Doctors of Philosophy'), (b'NA', b'Not Applicable')], default=b'NA', max_length=9)),
                ('year', models.CharField(choices=[(b'F', b'First'), (b'S', b'Second'), (b'T', b'Third'), (b'FO', b'Fourth'), (b'FI', b'Fifth'), (b'NA', b'Not Applicable')], default=b'NA', max_length=2)),
                ('specialization', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=20)),
                ('totalvotes', models.IntegerField(default=0)),
                ('subscribed_topics', models.ManyToManyField(to='api.Topic')),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upvote_downvote', models.BooleanField(default=True)),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Answer')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.User')),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='topics',
            field=models.ManyToManyField(to='api.Topic'),
        ),
        migrations.AddField(
            model_name='question',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.User'),
        ),
        migrations.AddField(
            model_name='notification',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Question'),
        ),
        migrations.AddField(
            model_name='notification',
            name='receiver',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to='api.User'),
        ),
        migrations.AddField(
            model_name='notification',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to='api.User'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.User'),
        ),
    ]
